{"ast":null,"code":"var _jsxFileName = \"/home/gachez/websites/creative-knowledge-resources/frontend/src/components/Images-components/Images.js\";\nimport React, { Component } from 'react';\nimport { Link, BrowserRouter } from 'react-router-dom';\nimport thumbnail from '../../images/thumbnails_image.png';\nimport axios from 'axios';\nimport '../../styles/Images.css';\n\nclass Images extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imagesArr: [],\n      isLoaded: false // gets all featured images and adds them to the state\n\n    };\n\n    this.runFunc = method => {\n      method();\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://tengezastudios.co.ke/wp-ckr/wp-json/wp/v2/images?_embed\").then(res => {\n      this.setState({\n        imagesArr: res.data,\n        isLoaded: true\n      });\n    }).catch(err => console.log(err));\n    this.state.imagesArr.length > 0 ? console.log(this.state.imagesArr) : console.log('shit!');\n    console.log(\"everything got\");\n  }\n\n  render() {\n    let filteredImages = this.state.imagesArr.filter(image => {\n      return image.acf['category'].includes(this.props.searchtext.toLowerCase()) || image.acf['year'].includes(this.props.searchtext);\n    });\n    let filteredBlockImages = this.state.imagesArr.filter(image => {\n      return image.acf['category'].includes(this.props.filtercategory.toLowerCase());\n    });\n\n    if (this.state.isLoaded) {\n      console.log(this.state.imagesArr);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"images-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, filteredImages.length < 1 ? // maps each featuredmedia to an image\n      this.state.imagesArr.map(image => {\n        return React.createElement(\"div\", {\n          onClick: () => {\n            window.location.href = \"/images-page\";\n            localStorage.setItem('id', image.id);\n          },\n          key: image.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"thumbnail\",\n          id: \"thumbnail\",\n          src: image._embedded['wp:featuredmedia']['0'].source_url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }));\n      }) : filteredImages.map(image => {\n        return React.createElement(Link, {\n          to: \"/images-page\",\n          onClick: () => {\n            localStorage.setItem('id', image.id);\n          },\n          key: image.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"thumbnail\",\n          id: \"thumb\",\n          src: image._embedded['wp:featuredmedia']['0'].source_url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      })));\n    }\n\n    return React.createElement(\"h2\", {\n      style: {\n        position: 'absolute',\n        top: '73%',\n        left: '130px',\n        fontFamily: 'Ubuntu'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Loading....\");\n  }\n\n}\n\nexport default Images;","map":{"version":3,"sources":["/home/gachez/websites/creative-knowledge-resources/frontend/src/components/Images-components/Images.js"],"names":["React","Component","Link","BrowserRouter","thumbnail","axios","Images","state","imagesArr","isLoaded","runFunc","method","componentDidMount","get","then","res","setState","data","catch","err","console","log","length","render","filteredImages","filter","image","acf","includes","props","searchtext","toLowerCase","filteredBlockImages","filtercategory","map","window","location","href","localStorage","setItem","id","_embedded","source_url","position","top","left","fontFamily"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Link, BrowserRouter} from 'react-router-dom'\nimport thumbnail from '../../images/thumbnails_image.png'\nimport axios from 'axios'\nimport '../../styles/Images.css'\n\n\n\n\nclass Images extends Component{\n    state={\n        imagesArr: [],\n        isLoaded: false\n    }\n\n    // gets all featured images and adds them to the state\n    componentDidMount(){\n        axios.get(`https://tengezastudios.co.ke/wp-ckr/wp-json/wp/v2/images?_embed`)\n        .then(res =>{\n            this.setState({\n                imagesArr: res.data,\n                isLoaded: true\n            })\n        })\n        .catch(err => console.log(err))\n        this.state.imagesArr.length > 0 ? console.log(this.state.imagesArr) : console.log('shit!')\n        console.log(\"everything got\")\n    }\n\n\n    runFunc = (method) =>{\n        method()\n    }\n          \n\n\n    render(){\n    \n        let filteredImages = this.state.imagesArr.filter(\n            (image) => {\n                return image.acf['category'].includes(this.props.searchtext.toLowerCase()) || image.acf['year'].includes(this.props.searchtext) \n            }\n        )\n\n        let filteredBlockImages = this.state.imagesArr.filter(\n            (image) => {\n                return image.acf['category'].includes(this.props.filtercategory.toLowerCase())\n            }\n        )\n         \n        \n        if(this.state.isLoaded){\n            console.log(this.state.imagesArr)\n        return(\n       \n            \n            \n       \n       <React.Fragment>\n                \n        {/* the images container  */}\n        <div id=\"images-container\" >\n\n        \n    {/* thumbnail images */}\n\n        {\n        \n\n            filteredImages.length < 1 ?\n\n                    // maps each featuredmedia to an image\n                    this.state.imagesArr.map(image =>{\n                        return(\n                            \n                           <div  onClick={\n                               () =>{\n                                   window.location.href=\"/images-page\"\n                                   localStorage.setItem('id', image.id)\n                               }\n                           } key = {image.id} >\n                           <img alt=\"thumbnail\" id=\"thumbnail\" src={image._embedded['wp:featuredmedia']['0'].source_url}  />\n                           </div>    \n                            \n                        \n                        )\n                    }): \n                    \n                     filteredImages.map(image =>{\n                        return(\n                            \n                           <Link to={\"/images-page\"} onClick={\n                               () =>{\n                                   localStorage.setItem('id', image.id)\n                               }\n                           } key = {image.id} >\n                           <img alt=\"thumbnail\" id=\"thumb\"  src={image._embedded['wp:featuredmedia']['0'].source_url}  />\n                           </Link>    \n                            \n                        \n                        )\n                    }) \n\n                }\n\n              \n\n              \n                    \n            \n            \n       \n        </div>\n            </React.Fragment>\n        )\n        } \n\n        return <h2 style={{\n            position: 'absolute',\n            top: '73%',\n            left: '130px',\n            fontFamily: 'Ubuntu'\n        }}>Loading....</h2>\n      \n    }\n}\n\nexport default Images;"]},"metadata":{},"sourceType":"module"}